<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Usuarios', 'artelamp');

/**
 * BaseUsuarios
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_usuario
 * @property string $nombre_usuario
 * @property string $clave
 * @property integer $vendedor
 * @property string $permisos
 * @property string $descripcion
 * @property string $telefono
 * @property string $movil
 * @property string $correo
 * @property timestamp $fecha_usuario
 * @property float $comi_imp
 * @property float $comi_nac
 * @property string $cargo
 * @property string $funciones
 * @property string $depto
 * @property integer $activo
 * 
 * @method integer   getIdUsuario()      Returns the current record's "id_usuario" value
 * @method string    getNombreUsuario()  Returns the current record's "nombre_usuario" value
 * @method string    getClave()          Returns the current record's "clave" value
 * @method integer   getVendedor()       Returns the current record's "vendedor" value
 * @method string    getPermisos()       Returns the current record's "permisos" value
 * @method string    getDescripcion()    Returns the current record's "descripcion" value
 * @method string    getTelefono()       Returns the current record's "telefono" value
 * @method string    getMovil()          Returns the current record's "movil" value
 * @method string    getCorreo()         Returns the current record's "correo" value
 * @method timestamp getFechaUsuario()   Returns the current record's "fecha_usuario" value
 * @method float     getComiImp()        Returns the current record's "comi_imp" value
 * @method float     getComiNac()        Returns the current record's "comi_nac" value
 * @method string    getCargo()          Returns the current record's "cargo" value
 * @method string    getFunciones()      Returns the current record's "funciones" value
 * @method string    getDepto()          Returns the current record's "depto" value
 * @method integer   getActivo()         Returns the current record's "activo" value
 * @method Usuarios  setIdUsuario()      Sets the current record's "id_usuario" value
 * @method Usuarios  setNombreUsuario()  Sets the current record's "nombre_usuario" value
 * @method Usuarios  setClave()          Sets the current record's "clave" value
 * @method Usuarios  setVendedor()       Sets the current record's "vendedor" value
 * @method Usuarios  setPermisos()       Sets the current record's "permisos" value
 * @method Usuarios  setDescripcion()    Sets the current record's "descripcion" value
 * @method Usuarios  setTelefono()       Sets the current record's "telefono" value
 * @method Usuarios  setMovil()          Sets the current record's "movil" value
 * @method Usuarios  setCorreo()         Sets the current record's "correo" value
 * @method Usuarios  setFechaUsuario()   Sets the current record's "fecha_usuario" value
 * @method Usuarios  setComiImp()        Sets the current record's "comi_imp" value
 * @method Usuarios  setComiNac()        Sets the current record's "comi_nac" value
 * @method Usuarios  setCargo()          Sets the current record's "cargo" value
 * @method Usuarios  setFunciones()      Sets the current record's "funciones" value
 * @method Usuarios  setDepto()          Sets the current record's "depto" value
 * @method Usuarios  setActivo()         Sets the current record's "activo" value
 * 
 * @package    sffacturacion
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUsuarios extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('usuarios');
        $this->hasColumn('id_usuario', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('nombre_usuario', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('clave', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('vendedor', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('permisos', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('descripcion', 'string', 500, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 500,
             ));
        $this->hasColumn('telefono', 'string', 500, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 500,
             ));
        $this->hasColumn('movil', 'string', 500, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 500,
             ));
        $this->hasColumn('correo', 'string', 500, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 500,
             ));
        $this->hasColumn('fecha_usuario', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('comi_imp', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.04',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('comi_nac', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.02',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('cargo', 'string', 64, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 64,
             ));
        $this->hasColumn('funciones', 'string', 2048, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 2048,
             ));
        $this->hasColumn('depto', 'string', 512, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 512,
             ));
        $this->hasColumn('activo', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}