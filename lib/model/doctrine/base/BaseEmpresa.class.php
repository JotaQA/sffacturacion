<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Empresa', 'artelamp');

/**
 * BaseEmpresa
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_empresa
 * @property string $nombre_empresa
 * @property string $rut_empresa
 * @property string $razon_social
 * @property string $rubro
 * @property string $descripcion_empresa
 * @property string $direccion
 * @property string $comuna
 * @property string $ciudad
 * @property string $telefono
 * @property string $website
 * @property string $logo
 * 
 * @method integer getIdEmpresa()           Returns the current record's "id_empresa" value
 * @method string  getNombreEmpresa()       Returns the current record's "nombre_empresa" value
 * @method string  getRutEmpresa()          Returns the current record's "rut_empresa" value
 * @method string  getRazonSocial()         Returns the current record's "razon_social" value
 * @method string  getRubro()               Returns the current record's "rubro" value
 * @method string  getDescripcionEmpresa()  Returns the current record's "descripcion_empresa" value
 * @method string  getDireccion()           Returns the current record's "direccion" value
 * @method string  getComuna()              Returns the current record's "comuna" value
 * @method string  getCiudad()              Returns the current record's "ciudad" value
 * @method string  getTelefono()            Returns the current record's "telefono" value
 * @method string  getWebsite()             Returns the current record's "website" value
 * @method string  getLogo()                Returns the current record's "logo" value
 * @method Empresa setIdEmpresa()           Sets the current record's "id_empresa" value
 * @method Empresa setNombreEmpresa()       Sets the current record's "nombre_empresa" value
 * @method Empresa setRutEmpresa()          Sets the current record's "rut_empresa" value
 * @method Empresa setRazonSocial()         Sets the current record's "razon_social" value
 * @method Empresa setRubro()               Sets the current record's "rubro" value
 * @method Empresa setDescripcionEmpresa()  Sets the current record's "descripcion_empresa" value
 * @method Empresa setDireccion()           Sets the current record's "direccion" value
 * @method Empresa setComuna()              Sets the current record's "comuna" value
 * @method Empresa setCiudad()              Sets the current record's "ciudad" value
 * @method Empresa setTelefono()            Sets the current record's "telefono" value
 * @method Empresa setWebsite()             Sets the current record's "website" value
 * @method Empresa setLogo()                Sets the current record's "logo" value
 * 
 * @package    sffacturacion
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEmpresa extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('empresa');
        $this->hasColumn('id_empresa', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('nombre_empresa', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('rut_empresa', 'string', 13, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 13,
             ));
        $this->hasColumn('razon_social', 'string', 300, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 300,
             ));
        $this->hasColumn('rubro', 'string', 300, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 300,
             ));
        $this->hasColumn('descripcion_empresa', 'string', 500, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 500,
             ));
        $this->hasColumn('direccion', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('comuna', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('ciudad', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('telefono', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('website', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('logo', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 30,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}