<?php
// Connection Component Binding
//Doctrine_Manager::getInstance()->bindComponent('Cuota', 'artelamp_1');

/**
 * BaseCuota
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_cuota
 * @property integer $id_factura
 * @property integer $id_estado_cuota
 * @property integer $monto_cuota
 * @property integer $montopagado_cuota
 * @property timestamp $fechavencimiento_cuota
 * @property string $accion_cuota
 * @property string $comentario_cuota
 * @property EstadoCuota $EstadoCuota
 * @property Factura $Factura
 * @property Doctrine_Collection $Pago
 * 
 * @method integer             getIdCuota()                Returns the current record's "id_cuota" value
 * @method integer             getIdFactura()              Returns the current record's "id_factura" value
 * @method integer             getIdEstadoCuota()          Returns the current record's "id_estado_cuota" value
 * @method integer             getMontoCuota()             Returns the current record's "monto_cuota" value
 * @method integer             getMontopagadoCuota()       Returns the current record's "montopagado_cuota" value
 * @method timestamp           getFechavencimientoCuota()  Returns the current record's "fechavencimiento_cuota" value
 * @method string              getAccionCuota()            Returns the current record's "accion_cuota" value
 * @method string              getComentarioCuota()        Returns the current record's "comentario_cuota" value
 * @method EstadoCuota         getEstadoCuota()            Returns the current record's "EstadoCuota" value
 * @method Factura             getFactura()                Returns the current record's "Factura" value
 * @method Doctrine_Collection getPago()                   Returns the current record's "Pago" collection
 * @method Cuota               setIdCuota()                Sets the current record's "id_cuota" value
 * @method Cuota               setIdFactura()              Sets the current record's "id_factura" value
 * @method Cuota               setIdEstadoCuota()          Sets the current record's "id_estado_cuota" value
 * @method Cuota               setMontoCuota()             Sets the current record's "monto_cuota" value
 * @method Cuota               setMontopagadoCuota()       Sets the current record's "montopagado_cuota" value
 * @method Cuota               setFechavencimientoCuota()  Sets the current record's "fechavencimiento_cuota" value
 * @method Cuota               setAccionCuota()            Sets the current record's "accion_cuota" value
 * @method Cuota               setComentarioCuota()        Sets the current record's "comentario_cuota" value
 * @method Cuota               setEstadoCuota()            Sets the current record's "EstadoCuota" value
 * @method Cuota               setFactura()                Sets the current record's "Factura" value
 * @method Cuota               setPago()                   Sets the current record's "Pago" collection
 * 
 * @package    sffacturacion
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseCuota extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cuota');
        $this->hasColumn('id_cuota', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('id_factura', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_estado_cuota', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('monto_cuota', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('montopagado_cuota', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fechavencimiento_cuota', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('accion_cuota', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('comentario_cuota', 'string', 300, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 300,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('EstadoCuota', array(
             'local' => 'id_estado_cuota',
             'foreign' => 'id_estado_cuota'));

        $this->hasOne('Factura', array(
             'local' => 'id_factura',
             'foreign' => 'id_factura'));

        $this->hasMany('Pago', array(
             'local' => 'id_cuota',
             'foreign' => 'id_cuota'));
    }
}