<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ActivosSimples', 'artelamp');

/**
 * BaseActivosSimples
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $codigoemp
 * @property string $descripcion
 * @property string $comentario
 * @property integer $compuesto
 * @property timestamp $fecha_simple
 * @property string $url_foto
 * @property string $detalle
 * @property integer $estado_activo
 * @property string $comentario_act_eli
 * @property float $peso_unitario
 * @property integer $unidades_por_caja_master
 * @property float $ancho
 * @property float $largo
 * @property float $alto
 * @property integer $en_promocion
 * 
 * @method string         getCodigoemp()                Returns the current record's "codigoemp" value
 * @method string         getDescripcion()              Returns the current record's "descripcion" value
 * @method string         getComentario()               Returns the current record's "comentario" value
 * @method integer        getCompuesto()                Returns the current record's "compuesto" value
 * @method timestamp      getFechaSimple()              Returns the current record's "fecha_simple" value
 * @method string         getUrlFoto()                  Returns the current record's "url_foto" value
 * @method string         getDetalle()                  Returns the current record's "detalle" value
 * @method integer        getEstadoActivo()             Returns the current record's "estado_activo" value
 * @method string         getComentarioActEli()         Returns the current record's "comentario_act_eli" value
 * @method float          getPesoUnitario()             Returns the current record's "peso_unitario" value
 * @method integer        getUnidadesPorCajaMaster()    Returns the current record's "unidades_por_caja_master" value
 * @method float          getAncho()                    Returns the current record's "ancho" value
 * @method float          getLargo()                    Returns the current record's "largo" value
 * @method float          getAlto()                     Returns the current record's "alto" value
 * @method integer        getEnPromocion()              Returns the current record's "en_promocion" value
 * @method ActivosSimples setCodigoemp()                Sets the current record's "codigoemp" value
 * @method ActivosSimples setDescripcion()              Sets the current record's "descripcion" value
 * @method ActivosSimples setComentario()               Sets the current record's "comentario" value
 * @method ActivosSimples setCompuesto()                Sets the current record's "compuesto" value
 * @method ActivosSimples setFechaSimple()              Sets the current record's "fecha_simple" value
 * @method ActivosSimples setUrlFoto()                  Sets the current record's "url_foto" value
 * @method ActivosSimples setDetalle()                  Sets the current record's "detalle" value
 * @method ActivosSimples setEstadoActivo()             Sets the current record's "estado_activo" value
 * @method ActivosSimples setComentarioActEli()         Sets the current record's "comentario_act_eli" value
 * @method ActivosSimples setPesoUnitario()             Sets the current record's "peso_unitario" value
 * @method ActivosSimples setUnidadesPorCajaMaster()    Sets the current record's "unidades_por_caja_master" value
 * @method ActivosSimples setAncho()                    Sets the current record's "ancho" value
 * @method ActivosSimples setLargo()                    Sets the current record's "largo" value
 * @method ActivosSimples setAlto()                     Sets the current record's "alto" value
 * @method ActivosSimples setEnPromocion()              Sets the current record's "en_promocion" value
 * 
 * @package    sffacturacion
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseActivosSimples extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('activos_simples');
        $this->hasColumn('codigoemp', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('descripcion', 'string', 500, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 500,
             ));
        $this->hasColumn('comentario', 'string', 5000, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 5000,
             ));
        $this->hasColumn('compuesto', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fecha_simple', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('url_foto', 'string', 1000, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1000,
             ));
        $this->hasColumn('detalle', 'string', 5000, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 5000,
             ));
        $this->hasColumn('estado_activo', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('comentario_act_eli', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('peso_unitario', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('unidades_por_caja_master', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('ancho', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('largo', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('alto', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('en_promocion', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 2,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}